pipeline {
  agent {
    label 'work_station'
  }

  options {
    ansiColor('xterm')
  }

  parameters {
    choice(name: 'ENV', choices: ['', 'dev', 'prod'], description: 'Pick Environment')
    string(name: 'APP_VERSION', defaultValue: '', description: 'Application Version to Deploy?')

  }

  stages {

    stage('FRONTEND') {
      steps {
        dir('nginx') {
          git branch: 'main', url: "https://github.com/chaitanyachandra/frontend.git"
          sh """
            export TF_VAR_APP_VERSION=${APP_VERSION}
            cd terraform-immutable
            terraform init -backend-config=env/${ENV}-backend.tfvars
            terraform destroy -auto-approve -var-file=env/${ENV}.tfvars
          """
        }
      }
    }

    stage('BACKEND') {
      steps {
        dir('spec') {
          git branch: 'main', url: "https://github.com/chaitanyachandra/spec.git"
          sh """
            export TF_VAR_APP_VERSION=${APP_VERSION}
            cd terraform-immutable
            terraform init -backend-config=env/${ENV}-backend.tfvars
            terraform destroy -auto-approve -var-file=env/${ENV}.tfvars
          """
        }
      }
    }

    stage('ELB-n-DB') {
      parallel {

        stage('DB') {
          steps {
            dir('DB') {
              git branch: 'main', url: "https://github.com/ChaitanyaChandra/terraform-db.git"
              sh '''
                terraform init -backend-config=env/${ENV}-backend.tfvars
                terraform destroy -auto-approve -var-file=env/${ENV}.tfvars
              '''
            }
          }
        }

        stage('ELB') {
          steps {
            dir('ELB') {
              git branch: 'main', url: "https://github.com/ChaitanyaChandra/elb.git"
              sh '''
                terraform init -backend-config=env/${ENV}-backend.tfvars
                terraform destroy -auto-approve -var-file=env/${ENV}.tfvars
              '''
            }
          }
        }
      }
    }

    stage('VPC') {
      steps {
        dir('vpc') {
          git branch: 'main', url: "https://github.com/ChaitanyaChandra/terraform-vpc.git"
          sh '''
            terraform init -backend-config=env/${ENV}-backend.tfvars
            terraform destroy -auto-approve -var-file=env/${ENV}.tfvars -target=aws_nat_gateway.ngw
            terraform destroy -auto-approve -var-file=env/${ENV}.tfvars -target=aws_eip.nat-gw
          '''
        }
      }
    }
  }

  post {
    always {
      cleanWs()
    }
  }

}